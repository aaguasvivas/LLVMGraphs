digraph {
    subgraph cluster_114 {
        graph [label="@llvm.dbg.declare"];
        114 [label="ExternalFunction: @llvm.dbg.declare"];
    }
    subgraph cluster_1 {
        graph [label="@divides"];
        subgraph cluster_4 {
            graph [label="%0"];
            6 [label="%1 = alloca i32 , align 4"
              ,shape=box];
            7 [label="%2 = alloca i32 , align 4"
              ,shape=box];
            8 [label="store i32 %n , i32* %1 , align 4"
              ,shape=box];
            9 [label="store i32 %m , i32* %2 , align 4"
              ,shape=box];
            10 [label="%3 = rem i32 %m , %n"
               ,shape=box];
            11 [label="%4 = icmp eq i32 %3 , 0"
               ,shape=box];
            13 [label="%5 = zext i1 %4 to i32"
               ,shape=box];
            14 [label="%6 = trunc i32 %5 to i8"
               ,shape=box];
            15 [label="ret i8 %6"
               ,shape=box];
        }
    }
    subgraph cluster_16 {
        graph [label="@even"];
        subgraph cluster_18 {
            graph [label="%0"];
            -21 [label=ReturnNode
                ,shape=box];
            19 [label="%1 = alloca i32 , align 4"
               ,shape=box];
            20 [label="store i32 %n , i32* %1 , align 4"
               ,shape=box];
            21 [label="%2 = call i8 @divides ( i32 2, i32 %n )"
               ,shape=box];
            23 [label="ret i8 %2"
               ,shape=box];
        }
    }
    subgraph cluster_24 {
        graph [label="@prime"];
        subgraph cluster_26 {
            graph [label="%0"];
            -31 [label=ReturnNode
                ,shape=box];
            27 [label="%1 = alloca i8 , align 1"
               ,shape=box];
            28 [label="%2 = alloca i32 , align 4"
               ,shape=box];
            29 [label="%i = alloca i32 , align 4"
               ,shape=box];
            30 [label="store i32 %n , i32* %2 , align 4"
               ,shape=box];
            31 [label="%3 = call i8 @even ( i32 %n )"
               ,shape=box];
            32 [label="%4 = icmp ne i8 %3 , 0"
               ,shape=box];
            34 [label="br i1 %4 , label %5 , label %9"
               ,shape=box];
        }
        subgraph cluster_35 {
            graph [label="%5"];
            36 [label="%6 = icmp eq i32 %n , 2"
               ,shape=box];
            37 [label="%7 = zext i1 %6 to i32"
               ,shape=box];
            38 [label="%8 = trunc i32 %7 to i8"
               ,shape=box];
            39 [label="store i8 %8 , i8* %1"
               ,shape=box];
            40 [label="br label %24"
               ,shape=box];
        }
        subgraph cluster_41 {
            graph [label="%9"];
            43 [label="store i32 3 , i32* %i , align 4"
               ,shape=box];
            44 [label="br label %10"
               ,shape=box];
        }
        subgraph cluster_45 {
            graph [label="%10"];
            46 [label="%11 = phi i32 [ [%19, %18], [3, %9] ]"
               ,shape=box];
            47 [label="%12 = mul i32 %11 , %11"
               ,shape=box];
            48 [label="%13 = icmp ule i32 %12 , %n"
               ,shape=box];
            49 [label="br i1 %13 , label %14 , label %20"
               ,shape=box];
        }
        subgraph cluster_50 {
            graph [label="%14"];
            -51 [label=ReturnNode
                ,shape=box];
            51 [label="%15 = call i8 @divides ( i32 %11, i32 %n )"
               ,shape=box];
            52 [label="%16 = icmp ne i8 %15 , 0"
               ,shape=box];
            53 [label="br i1 %16 , label %17 , label %18"
               ,shape=box];
        }
        subgraph cluster_54 {
            graph [label="%17"];
            55 [label="store i8 0 , i8* %1"
               ,shape=box];
            56 [label="br label %24"
               ,shape=box];
        }
        subgraph cluster_57 {
            graph [label="%18"];
            58 [label="%19 = add i32 %11 , 2"
               ,shape=box];
            59 [label="store i32 %19 , i32* %i , align 4"
               ,shape=box];
            60 [label="br label %10"
               ,shape=box];
        }
        subgraph cluster_61 {
            graph [label="%20"];
            62 [label="%21 = icmp ugt i32 %n , 1"
               ,shape=box];
            63 [label="%22 = zext i1 %21 to i32"
               ,shape=box];
            64 [label="%23 = trunc i32 %22 to i8"
               ,shape=box];
            65 [label="store i8 %23 , i8* %1"
               ,shape=box];
            66 [label="br label %24"
               ,shape=box];
        }
        subgraph cluster_67 {
            graph [label="%24"];
            68 [label="%25 = phi i8 [ [%23, %20], [0, %17], [%8, %5] ]"
               ,shape=box];
            69 [label="ret i8 %25"
               ,shape=box];
        }
    }
    subgraph cluster_70 {
        graph [label="@swap"];
        subgraph cluster_73 {
            graph [label="%0"];
            74 [label="%1 = alloca i32* , align 8"
               ,shape=box];
            75 [label="%2 = alloca i32* , align 8"
               ,shape=box];
            76 [label="%tmp = alloca i32 , align 4"
               ,shape=box];
            77 [label="store i32* %a , i32** %1 , align 8"
               ,shape=box];
            78 [label="store i32* %b , i32** %2 , align 8"
               ,shape=box];
            79 [label="%3 = load i32* %a , align 4"
               ,shape=box];
            80 [label="store i32 %3 , i32* %tmp , align 4"
               ,shape=box];
            81 [label="%4 = load i32* %b , align 4"
               ,shape=box];
            82 [label="store i32 %4 , i32* %a , align 4"
               ,shape=box];
            83 [label="store i32 %3 , i32* %b , align 4"
               ,shape=box];
            84 [label="ret void",shape=box];
        }
    }
    subgraph cluster_85 {
        graph [label="@main"];
        subgraph cluster_86 {
            graph [label="%0"];
            -97 [label=ReturnNode
                ,shape=box];
            -95 [label=ReturnNode
                ,shape=box];
            87 [label="%1 = alloca i32 , align 4"
               ,shape=box];
            88 [label="%x = alloca i32 , align 4"
               ,shape=box];
            89 [label="%y = alloca i32 , align 4"
               ,shape=box];
            90 [label="store i32 0 , i32* %1"
               ,shape=box];
            92 [label="store i32 21649 , i32* %x , align 4"
               ,shape=box];
            94 [label="store i32 513239 , i32* %y , align 4"
               ,shape=box];
            95 [label="call void @swap ( i32* %x, i32* %y )"
               ,shape=box];
            96 [label="%2 = load i32* %x , align 4"
               ,shape=box];
            97 [label="%3 = call i8 @prime ( i32 %2 )"
               ,shape=box];
            98 [label="%4 = zext i8 %3 to i32"
               ,shape=box];
            99 [label="%5 = icmp ne i32 %4 , 0"
               ,shape=box];
            100 [label="br i1 %5 , label %6 , label %11"
                ,shape=box];
        }
        subgraph cluster_101 {
            graph [label="%6"];
            -103 [label=ReturnNode
                 ,shape=box];
            102 [label="%7 = load i32* %y , align 4"
                ,shape=box];
            103 [label="%8 = call i8 @prime ( i32 %7 )"
                ,shape=box];
            104 [label="%9 = zext i8 %8 to i32"
                ,shape=box];
            105 [label="%10 = icmp ne i32 %9 , 0"
                ,shape=box];
            106 [label="br label %11"
                ,shape=box];
        }
        subgraph cluster_107 {
            graph [label="%11"];
            108 [label="%12 = phi i1 [ [0, %0], [%10, %6] ]"
                ,shape=box];
            111 [label="%13 = xor i1 %12 , -1"
                ,shape=box];
            112 [label="%14 = zext i1 %13 to i32"
                ,shape=box];
            113 [label="ret i32 %14"
                ,shape=box];
        }
    }
    -103 -> 104 [label=""];
    -97 -> 98 [label=""];
    -95 -> 96 [label=""];
    -51 -> 52 [label=""];
    -31 -> 32 [label=""];
    -21 -> 23 [label=""];
    6 -> 7 [label=""];
    7 -> 8 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 13 [label=""];
    13 -> 14 [label=""];
    14 -> 15 [label=""];
    15 -> -51 [label=")_[%15 = call i8 @divides ( i32 %11, i32 %n )]"
              ,style=dashed
              ,color=crimson];
    15 -> -21 [label=")_[%2 = call i8 @divides ( i32 2, i32 %n )]"
              ,style=dashed
              ,color=crimson];
    19 -> 20 [label=""];
    20 -> 21 [label=""];
    21 -> -21 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    21 -> 6 [label="(_[%2 = call i8 @divides ( i32 2, i32 %n )]"
            ,style=dashed
            ,color=deepskyblue];
    23 -> -31 [label=")_[%3 = call i8 @even ( i32 %n )]"
              ,style=dashed
              ,color=crimson];
    27 -> 28 [label=""];
    28 -> 29 [label=""];
    29 -> 30 [label=""];
    30 -> 31 [label=""];
    31 -> -31 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    31 -> 19 [label="(_[%3 = call i8 @even ( i32 %n )]"
             ,style=dashed
             ,color=deepskyblue];
    32 -> 34 [label=""];
    34 -> 36 [label=True];
    34 -> 43 [label=False];
    36 -> 37 [label=""];
    37 -> 38 [label=""];
    38 -> 39 [label=""];
    39 -> 40 [label=""];
    40 -> 68 [label=""];
    43 -> 44 [label=""];
    44 -> 46 [label=""];
    46 -> 47 [label=""];
    47 -> 48 [label=""];
    48 -> 49 [label=""];
    49 -> 51 [label=True];
    49 -> 62 [label=False];
    51 -> -51 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    51 -> 6 [label="(_[%15 = call i8 @divides ( i32 %11, i32 %n )]"
            ,style=dashed
            ,color=deepskyblue];
    52 -> 53 [label=""];
    53 -> 55 [label=True];
    53 -> 58 [label=False];
    55 -> 56 [label=""];
    56 -> 68 [label=""];
    58 -> 59 [label=""];
    59 -> 60 [label=""];
    60 -> 46 [label=""];
    62 -> 63 [label=""];
    63 -> 64 [label=""];
    64 -> 65 [label=""];
    65 -> 66 [label=""];
    66 -> 68 [label=""];
    68 -> 69 [label=""];
    69 -> -103 [label=")_[%8 = call i8 @prime ( i32 %7 )]"
               ,style=dashed
               ,color=crimson];
    69 -> -97 [label=")_[%3 = call i8 @prime ( i32 %2 )]"
              ,style=dashed
              ,color=crimson];
    74 -> 75 [label=""];
    75 -> 76 [label=""];
    76 -> 77 [label=""];
    77 -> 78 [label=""];
    78 -> 79 [label=""];
    79 -> 80 [label=""];
    80 -> 81 [label=""];
    81 -> 82 [label=""];
    82 -> 83 [label=""];
    83 -> 84 [label=""];
    84 -> -95 [label=")_[call void @swap ( i32* %x, i32* %y )]"
              ,style=dashed
              ,color=crimson];
    87 -> 88 [label=""];
    88 -> 89 [label=""];
    89 -> 90 [label=""];
    90 -> 92 [label=""];
    92 -> 94 [label=""];
    94 -> 95 [label=""];
    95 -> -95 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    95 -> 74 [label="(_[call void @swap ( i32* %x, i32* %y )]"
             ,style=dashed
             ,color=deepskyblue];
    96 -> 97 [label=""];
    97 -> -97 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    97 -> 27 [label="(_[%3 = call i8 @prime ( i32 %2 )]"
             ,style=dashed
             ,color=deepskyblue];
    98 -> 99 [label=""];
    99 -> 100 [label=""];
    100 -> 102 [label=True];
    100 -> 108 [label=False];
    102 -> 103 [label=""];
    103 -> -103 [label="<call-to-return>"
                ,style=dotted
                ,color=forestgreen];
    103 -> 27 [label="(_[%8 = call i8 @prime ( i32 %7 )]"
              ,style=dashed
              ,color=deepskyblue];
    104 -> 105 [label=""];
    105 -> 106 [label=""];
    106 -> 108 [label=""];
    108 -> 111 [label=""];
    111 -> 112 [label=""];
    112 -> 113 [label=""];
}