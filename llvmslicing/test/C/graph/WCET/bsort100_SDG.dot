digraph {
    subgraph cluster_6 {
        graph [label="[\"wcet/bsort100.c:32\"]@main"];
        -4611686018427387894 [label="FinalUse(%StartTime)"
                             ,color=green];
        -4611686018427387893 [label="FinalUse(%StopTime)"
                             ,color=green];
        -4611686018427387892 [label="FinalUse(%TotalTime)"
                             ,color=green];
        -2305843009213693945 [label="(global-out)@main:@factor"
                             ,color=yellow];
        -658812288346769688 [label="(actual-out)%1:@factor"
                            ,color=yellow];
        6 [label="ENTER @main"
          ,color=yellow];
        9 [label="[]: %StartTime = alloca i64 , align 8"
          ,shape=box];
        10 [label="[]: %StopTime = alloca i64 , align 8"
           ,shape=box];
        11 [label="[]: %TotalTime = alloca float , align 4"
           ,shape=box];
        12 [label="[41]: %1 = call i32 @Initialize ( i32* i32* getelementptr ( [101 x i32]* @Array ,  i32 0, i32 0 ) )"
           ,shape=box];
        15 [label="[43]: %3 = call i32 @BubbleSort ( i32* i32* getelementptr ( [101 x i32]* @Array ,  i32 0, i32 0 ) )"
           ,shape=box];
        16 [label="[50]: ret i32 0"
           ,shape=box];
        576460752303423472 [label="(actual-in)%3:@Seed"
                           ,color=yellow];
        576460752303423475 [label="(actual-in)%1:@Seed"
                           ,color=yellow];
        658812288346769685 [label="(actual-in)%3:@factor"
                           ,color=yellow];
        658812288346769688 [label="(actual-in)%1:@factor"
                           ,color=yellow];
        768614336404564635 [label="(actual-in)%3:@Array"
                           ,color=yellow];
        768614336404564638 [label="(actual-in)%1:@Array"
                           ,color=yellow];
        1537228672809129295 [label="(global-in)@main:@Seed"
                            ,color=yellow];
        2305843009213693945 [label="(global-in)@main:@factor"
                            ,color=yellow];
        4611686018427387897 [label="(global-in)@main:@Array"
                            ,color=yellow];
    }
    subgraph cluster_17 {
        graph [label="[\"wcet/bsort100.c:53\"]@ttime"];
        -4611686018427387886 [label="(global-out)@ttime:@Array"
                             ,color=yellow];
        -4611686018427387884 [label="FinalUse(%buffer)"
                             ,color=green];
        -4611686018427387883 [label="FinalUse(%utime)"
                             ,color=green];
        -2305843009213693934 [label="(global-out)@ttime:@factor"
                             ,color=yellow];
        -1537228672809129284 [label="(global-out)@ttime:@Seed"
                             ,color=yellow];
        17 [label="ENTER @ttime"
           ,color=yellow];
        19 [label="[]: %buffer = alloca %struct.tms , align 8"
           ,shape=box];
        20 [label="[]: %utime = alloca i32 , align 4"
           ,shape=box];
        21 [label="[63]: %1 = getelementptr inbounds %struct.tms* %buffer , i32 0, i32 0"
           ,shape=box];
        24 [label="[63]: %2 = div double 0.0 , 60.0"
           ,shape=box];
        26 [label="[63]: %3 = mul double %2 , 1000.0"
           ,shape=box];
        27 [label="[63]: %4 = fptosi double %3 to i32"
           ,shape=box];
        28 [label="[63]: store i32 %4 , i32* %utime , align 4"
           ,shape=box];
        29 [label="[64]: ret i32 %4"
           ,shape=box];
        1537228672809129284 [label="(global-in)@ttime:@Seed"
                            ,color=yellow];
        2305843009213693934 [label="(global-in)@ttime:@factor"
                            ,color=yellow];
        4611686018427387886 [label="(global-in)@ttime:@Array"
                            ,color=yellow];
    }
    subgraph cluster_30 {
        graph [label="[\"wcet/bsort100.c:68\"]@Initialize"];
        -4611686018427387870 [label="FinalUse(%1)"
                             ,color=green];
        -4611686018427387869 [label="FinalUse(%2)"
                             ,color=green];
        -4611686018427387868 [label="FinalUse(%Index)"
                             ,color=green];
        -4611686018427387867 [label="FinalUse(%fact)"
                             ,color=green];
        -2305843009213693921 [label="(global-out)@Initialize:@factor"
                             ,color=yellow];
        -31 [label="(formal-out)%Array"
            ,color=yellow];
        30 [label="ENTER @Initialize"
           ,color=yellow];
        31 [label="(formal-in)%Array"
           ,color=yellow];
        33 [label="[]: %1 = alloca i32 , align 4"
           ,shape=box];
        34 [label="[]: %2 = alloca i32* , align 8"
           ,shape=box];
        35 [label="[]: %Index = alloca i32 , align 4"
           ,shape=box];
        36 [label="[]: %fact = alloca i32 , align 4"
           ,shape=box];
        37 [label="[]: store i32* %Array , i32** %2 , align 8"
           ,shape=box];
        39 [label="[77]: store i32 -1 , i32* @factor , align 4"
           ,shape=box];
        40 [label="[82]: store i32 -1 , i32* %fact , align 4"
           ,shape=box];
        41 [label="[83]: store i32 1 , i32* %Index , align 4"
           ,shape=box];
        42 [label="[83]: br label %3"
           ,shape=box];
        44 [label="[]: %4 = phi i32 [ [%14, %6], [1, %0] ]"
           ,shape=box];
        45 [label="[83]: %5 = icmp sle i32 %4 , 100"
           ,shape=box];
        47 [label="[83]: br i1 %5 , label %6 , label %15"
           ,shape=box];
        49 [label="[84]: %7 = mul nsw i32 %4 , -1"
           ,shape=box];
        50 [label="[84]: %8 = load i8* i8* inttoptr (i64 2149580801 to i8*) , align 1"
           ,shape=box];
        54 [label="[84]: %10 = sext i8 %8 to i32"
           ,shape=box];
        55 [label="[84]: %11 = mul nsw i32 %7 , %10"
           ,shape=box];
        56 [label="[84]: %12 = sext i32 %4 to i64"
           ,shape=box];
        57 [label="[84]: %13 = getelementptr inbounds i32* %Array , i64 %12"
           ,shape=box];
        58 [label="[84]: store i32 %11 , i32* %13 , align 4"
           ,shape=box];
        59 [label="[83]: %14 = add nsw i32 %4 , 1"
           ,shape=box];
        60 [label="[83]: store i32 %14 , i32* %Index , align 4"
           ,shape=box];
        61 [label="[83]: br label %3"
           ,shape=box];
        63 [label="[85]: ret i32 undef"
           ,shape=box];
        1537228672809129271 [label="(global-in)@Initialize:@Seed"
                            ,color=yellow];
        2305843009213693921 [label="(global-in)@Initialize:@factor"
                            ,color=yellow];
        4611686018427387873 [label="(global-in)@Initialize:@Array"
                            ,color=yellow];
    }
    subgraph cluster_65 {
        graph [label="[\"wcet/bsort100.c:89\"]@BubbleSort"];
        -4611686018427387835 [label="FinalUse(%1)"
                             ,color=green];
        -4611686018427387834 [label="FinalUse(%2)"
                             ,color=green];
        -4611686018427387833 [label="FinalUse(%Sorted)"
                             ,color=green];
        -4611686018427387832 [label="FinalUse(%Temp)"
                             ,color=green];
        -4611686018427387831 [label="FinalUse(%LastIndex)"
                             ,color=green];
        -4611686018427387830 [label="FinalUse(%Index)"
                             ,color=green];
        -4611686018427387829 [label="FinalUse(%i)"
                             ,color=green];
        65 [label="ENTER @BubbleSort"
           ,color=yellow];
        66 [label="(formal-in)%Array"
           ,color=yellow];
        68 [label="[]: %1 = alloca i32 , align 4"
           ,shape=box];
        69 [label="[]: %2 = alloca i32* , align 8"
           ,shape=box];
        70 [label="[]: %Sorted = alloca i32 , align 4"
           ,shape=box];
        71 [label="[]: %Temp = alloca i32 , align 4"
           ,shape=box];
        72 [label="[]: %LastIndex = alloca i32 , align 4"
           ,shape=box];
        73 [label="[]: %Index = alloca i32 , align 4"
           ,shape=box];
        74 [label="[]: %i = alloca i32 , align 4"
           ,shape=box];
        75 [label="[]: store i32* %Array , i32** %2 , align 8"
           ,shape=box];
        76 [label="[95]: store i32 0 , i32* %Sorted , align 4"
           ,shape=box];
        77 [label="[98]: store i32 1 , i32* %i , align 4"
           ,shape=box];
        78 [label="[98]: br label %3"
           ,shape=box];
        80 [label="[]: %4 = phi i32* [ [%10, %42], [%Array, %0] ]"
           ,shape=box];
        81 [label="[]: %5 = phi i32 [ [%43, %42], [1, %0] ]"
           ,shape=box];
        82 [label="[98]: %6 = icmp sle i32 %5 , 99"
           ,shape=box];
        84 [label="[98]: br i1 %6 , label %7 , label %._crit_edge"
           ,shape=box];
        86 [label="[98]: br label %44"
           ,shape=box];
        88 [label="[102]: store i32 1 , i32* %Sorted , align 4"
           ,shape=box];
        89 [label="[103]: store i32 1 , i32* %Index , align 4"
           ,shape=box];
        90 [label="[103]: br label %8"
           ,shape=box];
        92 [label="[]: %9 = phi i32 [ [%35, %34], [1, %7] ]"
           ,shape=box];
        93 [label="[]: %10 = phi i32* [ [%37, %34], [%4, %7] ]"
           ,shape=box];
        94 [label="[]: %11 = phi i32 [ [%38, %34], [1, %7] ]"
           ,shape=box];
        95 [label="[103]: %12 = icmp sle i32 %11 , 99"
           ,shape=box];
        96 [label="[103]: br i1 %12 , label %13 , label %39"
           ,shape=box];
        98 [label="[106]: %14 = sub nsw i32 100 , %5"
           ,shape=box];
        99 [label="[106]: %15 = icmp sgt i32 %11 , %14"
           ,shape=box];
        100 [label="[106]: br i1 %15 , label %16 , label %17"
            ,shape=box];
        102 [label="[107]: br label %39"
            ,shape=box];
        104 [label="[108]: %18 = sext i32 %11 to i64"
            ,shape=box];
        105 [label="[108]: %19 = getelementptr inbounds i32* %10 , i64 %18"
            ,shape=box];
        106 [label="[108]: %20 = load i32* %19 , align 4"
            ,shape=box];
        107 [label="[108]: %21 = add nsw i32 %11 , 1"
            ,shape=box];
        108 [label="[108]: %22 = sext i32 %21 to i64"
            ,shape=box];
        109 [label="[108]: %23 = getelementptr inbounds i32* %10 , i64 %22"
            ,shape=box];
        110 [label="[108]: %24 = load i32* %23 , align 4"
            ,shape=box];
        111 [label="[108]: %25 = icmp sgt i32 %20 , %24"
            ,shape=box];
        112 [label="[108]: br i1 %25 , label %26 , label %34"
            ,shape=box];
        114 [label="[110]: store i32 %20 , i32* %Temp , align 4"
            ,shape=box];
        115 [label="[111]: %27 = load i32* %23 , align 4"
            ,shape=box];
        116 [label="[111]: store i32 %27 , i32* %19 , align 4"
            ,shape=box];
        117 [label="[112]: %28 = load i32* %Temp , align 4"
            ,shape=box];
        118 [label="[112]: %29 = load i32* %Index , align 4"
            ,shape=box];
        119 [label="[112]: %30 = add nsw i32 %29 , 1"
            ,shape=box];
        120 [label="[112]: %31 = sext i32 %30 to i64"
            ,shape=box];
        121 [label="[112]: %32 = load i32** %2 , align 8"
            ,shape=box];
        122 [label="[112]: %33 = getelementptr inbounds i32* %32 , i64 %31"
            ,shape=box];
        123 [label="[112]: store i32 %28 , i32* %33 , align 4"
            ,shape=box];
        124 [label="[113]: store i32 0 , i32* %Sorted , align 4"
            ,shape=box];
        125 [label="[114]: br label %34"
            ,shape=box];
        127 [label="[]: %35 = phi i32 [ [0, %26], [%9, %17] ]"
            ,shape=box];
        128 [label="[105]: %36 = phi i32 [ [%29, %26], [%11, %17] ]"
            ,shape=box];
        129 [label="[]: %37 = phi i32* [ [%32, %26], [%10, %17] ]"
            ,shape=box];
        130 [label="[105]: %38 = add nsw i32 %36 , 1"
            ,shape=box];
        131 [label="[105]: store i32 %38 , i32* %Index , align 4"
            ,shape=box];
        132 [label="[105]: br label %8"
            ,shape=box];
        134 [label="[117]: %40 = icmp ne i32 %9 , 0"
            ,shape=box];
        135 [label="[117]: br i1 %40 , label %41 , label %42"
            ,shape=box];
        137 [label="[118]: br label %44"
            ,shape=box];
        139 [label="[100]: %43 = add nsw i32 %5 , 1"
            ,shape=box];
        140 [label="[100]: store i32 %43 , i32* %i , align 4"
            ,shape=box];
        141 [label="[100]: br label %3"
            ,shape=box];
        143 [label="[127]: %45 = load i32* %1"
            ,shape=box];
        144 [label="[127]: ret i32 %45"
            ,shape=box];
        1537228672809129236 [label="(global-in)@BubbleSort:@Seed"
                            ,color=yellow];
        2305843009213693886 [label="(global-in)@BubbleSort:@factor"
                            ,color=yellow];
        4611686018427387838 [label="(global-in)@BubbleSort:@Array"
                            ,color=yellow];
    }
    -4611686018427387869 -> -31 [color=sandybrown];
    -2305843009213693921 -> -658812288346769688 [style=dashed
                                                ,color=purple];
    -658812288346769688 -> -2305843009213693945 [color=sandybrown];
    -658812288346769688 -> 658812288346769685 [color=sandybrown];
    6 -> -4611686018427387894 [color=black];
    6 -> -4611686018427387893 [color=black];
    6 -> -4611686018427387892 [color=black];
    6 -> -2305843009213693945 [color=black];
    6 -> 9 [color=black];
    6 -> 10 [color=black];
    6 -> 11 [color=black];
    6 -> 12 [color=black];
    6 -> 15 [color=black];
    6 -> 16 [color=black];
    6 -> 1537228672809129295 [color=black];
    6 -> 2305843009213693945 [color=black];
    6 -> 4611686018427387897 [color=black];
    12 -> -658812288346769688 [color=black];
    12 -> 12 [color=red,style=bold];
    12 -> 30 [color=deepskyblue];
    12 -> 576460752303423475 [color=black];
    12 -> 658812288346769688 [color=black];
    12 -> 768614336404564638 [color=black];
    15 -> 65 [color=deepskyblue];
    15 -> 576460752303423472 [color=black];
    15 -> 658812288346769685 [color=black];
    15 -> 768614336404564635 [color=black];
    17 -> -4611686018427387886 [color=black];
    17 -> -4611686018427387884 [color=black];
    17 -> -4611686018427387883 [color=black];
    17 -> -2305843009213693934 [color=black];
    17 -> -1537228672809129284 [color=black];
    17 -> 19 [color=black];
    17 -> 20 [color=black];
    17 -> 21 [color=black];
    17 -> 24 [color=black];
    17 -> 26 [color=black];
    17 -> 27 [color=black];
    17 -> 28 [color=black];
    17 -> 29 [color=black];
    17 -> 1537228672809129284 [color=black];
    17 -> 2305843009213693934 [color=black];
    17 -> 4611686018427387886 [color=black];
    19 -> 21 [color=sandybrown];
    24 -> 26 [color=sandybrown];
    26 -> 27 [color=sandybrown];
    27 -> 28 [color=sandybrown];
    27 -> 29 [color=sandybrown];
    28 -> -4611686018427387883 [color=sandybrown];
    30 -> -4611686018427387870 [color=black];
    30 -> -4611686018427387869 [color=black];
    30 -> -4611686018427387868 [color=black];
    30 -> -4611686018427387867 [color=black];
    30 -> -2305843009213693921 [color=black];
    30 -> -31 [color=black];
    30 -> 31 [color=black];
    30 -> 33 [color=black];
    30 -> 34 [color=black];
    30 -> 35 [color=black];
    30 -> 36 [color=black];
    30 -> 37 [color=black];
    30 -> 39 [color=black];
    30 -> 40 [color=black];
    30 -> 41 [color=black];
    30 -> 42 [color=black];
    30 -> 44 [color=black];
    30 -> 45 [color=black];
    30 -> 47 [color=black];
    30 -> 1537228672809129271 [color=black];
    30 -> 2305843009213693921 [color=black];
    30 -> 4611686018427387873 [color=black];
    31 -> -31 [color=sandybrown];
    31 -> 37 [color=sandybrown];
    31 -> 57 [color=sandybrown];
    37 -> -4611686018427387869 [color=sandybrown];
    39 -> -2305843009213693921 [color=sandybrown];
    40 -> -4611686018427387867 [color=sandybrown];
    41 -> -4611686018427387868 [color=sandybrown];
    44 -> 45 [color=sandybrown];
    44 -> 49 [color=sandybrown];
    44 -> 56 [color=sandybrown];
    44 -> 59 [color=sandybrown];
    45 -> 47 [color=sandybrown];
    47 -> 49 [color=black];
    47 -> 50 [color=black];
    47 -> 54 [color=black];
    47 -> 55 [color=black];
    47 -> 56 [color=black];
    47 -> 57 [color=black];
    47 -> 58 [color=black];
    47 -> 59 [color=black];
    47 -> 60 [color=black];
    47 -> 61 [color=black];
    47 -> 63 [color=black];
    49 -> 55 [color=sandybrown];
    50 -> 54 [color=sandybrown];
    54 -> 55 [color=sandybrown];
    55 -> 58 [color=sandybrown];
    56 -> 57 [color=sandybrown];
    58 -> -31 [color=sandybrown];
    58 -> 57 [color=sandybrown];
    59 -> 44 [color=sandybrown];
    59 -> 60 [color=sandybrown];
    60 -> -4611686018427387868 [color=sandybrown];
    65 -> -4611686018427387835 [color=black];
    65 -> -4611686018427387834 [color=black];
    65 -> -4611686018427387833 [color=black];
    65 -> -4611686018427387832 [color=black];
    65 -> -4611686018427387831 [color=black];
    65 -> -4611686018427387830 [color=black];
    65 -> -4611686018427387829 [color=black];
    65 -> 66 [color=black];
    65 -> 68 [color=black];
    65 -> 69 [color=black];
    65 -> 70 [color=black];
    65 -> 71 [color=black];
    65 -> 72 [color=black];
    65 -> 73 [color=black];
    65 -> 74 [color=black];
    65 -> 75 [color=black];
    65 -> 76 [color=black];
    65 -> 77 [color=black];
    65 -> 78 [color=black];
    65 -> 80 [color=black];
    65 -> 81 [color=black];
    65 -> 82 [color=black];
    65 -> 84 [color=black];
    65 -> 92 [color=black];
    65 -> 93 [color=black];
    65 -> 94 [color=black];
    65 -> 95 [color=black];
    65 -> 96 [color=black];
    65 -> 143 [color=black];
    65 -> 144 [color=black];
    65 -> 1537228672809129236 [color=black];
    65 -> 2305843009213693886 [color=black];
    65 -> 4611686018427387838 [color=black];
    66 -> 75 [color=sandybrown];
    66 -> 80 [color=sandybrown];
    68 -> 143 [color=sandybrown];
    75 -> -4611686018427387834 [color=sandybrown];
    75 -> 121 [color=sandybrown];
    76 -> -4611686018427387833 [color=sandybrown];
    77 -> -4611686018427387829 [color=sandybrown];
    80 -> 93 [color=sandybrown];
    81 -> 82 [color=sandybrown];
    81 -> 98 [color=sandybrown];
    81 -> 139 [color=sandybrown];
    82 -> 84 [color=sandybrown];
    84 -> 86 [color=black];
    84 -> 88 [color=black];
    84 -> 89 [color=black];
    84 -> 90 [color=black];
    88 -> -4611686018427387833 [color=sandybrown];
    89 -> -4611686018427387830 [color=sandybrown];
    89 -> 118 [color=sandybrown];
    92 -> 127 [color=sandybrown];
    92 -> 134 [color=sandybrown];
    93 -> 80 [color=sandybrown];
    93 -> 105 [color=sandybrown];
    93 -> 106 [color=sandybrown];
    93 -> 109 [color=sandybrown];
    93 -> 110 [color=sandybrown];
    93 -> 115 [color=sandybrown];
    94 -> 95 [color=sandybrown];
    94 -> 99 [color=sandybrown];
    94 -> 104 [color=sandybrown];
    94 -> 107 [color=sandybrown];
    94 -> 128 [color=sandybrown];
    95 -> 96 [color=sandybrown];
    96 -> 98 [color=black];
    96 -> 99 [color=black];
    96 -> 100 [color=black];
    96 -> 134 [color=black];
    96 -> 135 [color=black];
    98 -> 99 [color=sandybrown];
    99 -> 100 [color=sandybrown];
    100 -> 102 [color=black];
    100 -> 104 [color=black];
    100 -> 105 [color=black];
    100 -> 106 [color=black];
    100 -> 107 [color=black];
    100 -> 108 [color=black];
    100 -> 109 [color=black];
    100 -> 110 [color=black];
    100 -> 111 [color=black];
    100 -> 112 [color=black];
    104 -> 105 [color=sandybrown];
    106 -> 111 [color=sandybrown];
    106 -> 114 [color=sandybrown];
    107 -> 108 [color=sandybrown];
    108 -> 109 [color=sandybrown];
    110 -> 111 [color=sandybrown];
    111 -> 112 [color=sandybrown];
    112 -> 114 [color=black];
    112 -> 115 [color=black];
    112 -> 116 [color=black];
    112 -> 117 [color=black];
    112 -> 118 [color=black];
    112 -> 119 [color=black];
    112 -> 120 [color=black];
    112 -> 121 [color=black];
    112 -> 122 [color=black];
    112 -> 123 [color=black];
    112 -> 124 [color=black];
    112 -> 125 [color=black];
    112 -> 127 [color=black];
    112 -> 128 [color=black];
    112 -> 129 [color=black];
    112 -> 130 [color=black];
    112 -> 131 [color=black];
    112 -> 132 [color=black];
    114 -> -4611686018427387832 [color=sandybrown];
    114 -> 117 [color=sandybrown];
    115 -> 116 [color=sandybrown];
    116 -> 80 [color=sandybrown];
    116 -> 105 [color=sandybrown];
    116 -> 106 [color=sandybrown];
    116 -> 109 [color=sandybrown];
    116 -> 110 [color=sandybrown];
    116 -> 115 [color=sandybrown];
    116 -> 129 [color=sandybrown];
    117 -> 123 [color=sandybrown];
    118 -> 119 [color=sandybrown];
    118 -> 128 [color=sandybrown];
    119 -> 120 [color=sandybrown];
    120 -> 122 [color=sandybrown];
    121 -> 122 [color=sandybrown];
    121 -> 129 [color=sandybrown];
    123 -> -4611686018427387834 [color=sandybrown];
    123 -> 121 [color=sandybrown];
    124 -> -4611686018427387833 [color=sandybrown];
    127 -> 92 [color=sandybrown];
    128 -> 130 [color=sandybrown];
    129 -> 93 [color=sandybrown];
    130 -> 94 [color=sandybrown];
    130 -> 131 [color=sandybrown];
    131 -> -4611686018427387830 [color=sandybrown];
    131 -> 118 [color=sandybrown];
    134 -> 135 [color=sandybrown];
    135 -> 137 [color=black];
    135 -> 139 [color=black];
    135 -> 140 [color=black];
    135 -> 141 [color=black];
    139 -> 81 [color=sandybrown];
    139 -> 140 [color=sandybrown];
    140 -> -4611686018427387829 [color=sandybrown];
    143 -> 144 [color=sandybrown];
    576460752303423472 -> 1537228672809129236 [style=dashed
                                              ,color=forestgreen];
    576460752303423475 -> 1537228672809129271 [style=dashed
                                              ,color=forestgreen];
    658812288346769685 -> 2305843009213693886 [style=dashed
                                              ,color=forestgreen];
    658812288346769688 -> -658812288346769688 [color=red
                                              ,style=bold];
    658812288346769688 -> 2305843009213693921 [style=dashed
                                              ,color=forestgreen];
    768614336404564635 -> 4611686018427387838 [style=dashed
                                              ,color=forestgreen];
    768614336404564638 -> 4611686018427387873 [style=dashed
                                              ,color=forestgreen];
    1537228672809129284 -> -1537228672809129284 [color=sandybrown];
    1537228672809129295 -> 576460752303423472 [color=sandybrown];
    1537228672809129295 -> 576460752303423475 [color=sandybrown];
    2305843009213693934 -> -2305843009213693934 [color=sandybrown];
    2305843009213693945 -> 658812288346769688 [color=sandybrown];
    4611686018427387886 -> -4611686018427387886 [color=sandybrown];
    4611686018427387897 -> 768614336404564635 [color=sandybrown];
    4611686018427387897 -> 768614336404564638 [color=sandybrown];
}