digraph {
    subgraph cluster_47 {
        graph [label="[\"wcet/bs.c:71\"]@main"];
        47 [label="ENTER @main"
           ,color=yellow];
        49 [label="[73]: %1 = call i32 @binary_search ( i32 8 )"
           ,shape=box];
        50 [label="[74]: ret i32 0"
           ,shape=box];
        768614336404564601 [label="(actual-in)%1:@data"
                           ,color=yellow];
        4611686018427387856 [label="(global-in)@main:@data"
                            ,color=yellow];
    }
    subgraph cluster_52 {
        graph [label="[\"wcet/bs.c:76\"]@binary_search"];
        -4611686018427387848 [label="FinalUse(%1)"
                             ,color=green];
        -4611686018427387847 [label="FinalUse(%fvalue)"
                             ,color=green];
        -4611686018427387846 [label="FinalUse(%mid)"
                             ,color=green];
        -4611686018427387845 [label="FinalUse(%up)"
                             ,color=green];
        -4611686018427387844 [label="FinalUse(%low)"
                             ,color=green];
        52 [label="ENTER @binary_search"
           ,color=yellow];
        53 [label="(formal-in)%x"
           ,color=yellow];
        55 [label="[]: %1 = alloca i32 , align 4"
           ,shape=box];
        56 [label="[]: %fvalue = alloca i32 , align 4"
           ,shape=box];
        57 [label="[]: %mid = alloca i32 , align 4"
           ,shape=box];
        58 [label="[]: %up = alloca i32 , align 4"
           ,shape=box];
        59 [label="[]: %low = alloca i32 , align 4"
           ,shape=box];
        60 [label="[]: store i32 %x , i32* %1 , align 4"
           ,shape=box];
        61 [label="[80]: store i32 0 , i32* %low , align 4"
           ,shape=box];
        62 [label="[81]: store i32 14 , i32* %up , align 4"
           ,shape=box];
        64 [label="[82]: store i32 -1 , i32* %fvalue , align 4"
           ,shape=box];
        65 [label="[83]: br label %2"
           ,shape=box];
        67 [label="[]: %3 = phi i32 [ [%30, %29], [-1, %0] ]"
           ,shape=box];
        68 [label="[]: %4 = phi i32 [ [%31, %29], [%x, %0] ]"
           ,shape=box];
        69 [label="[]: %5 = phi i32 [ [%32, %29], [14, %0] ]"
           ,shape=box];
        70 [label="[]: %6 = phi i32 [ [%33, %29], [0, %0] ]"
           ,shape=box];
        71 [label="[83]: %7 = icmp sle i32 %6 , %5"
           ,shape=box];
        72 [label="[83]: br i1 %7 , label %8 , label %34"
           ,shape=box];
        74 [label="[84]: %9 = add nsw i32 %6 , %5"
           ,shape=box];
        75 [label="[84]: %10 = ashr i32 %9 , 1"
           ,shape=box];
        76 [label="[84]: store i32 %10 , i32* %mid , align 4"
           ,shape=box];
        77 [label="[85]: %11 = sext i32 %10 to i64"
           ,shape=box];
        78 [label="[85]: %12 = getelementptr inbounds [15 x %struct.DATA]* @data , i32 0, i64 %11"
           ,shape=box];
        79 [label="[85]: %13 = getelementptr inbounds %struct.DATA* %12 , i32 0, i32 0"
           ,shape=box];
        80 [label="[85]: %14 = load i32* %13 , align 4"
           ,shape=box];
        81 [label="[85]: %15 = icmp eq i32 %14 , %4"
           ,shape=box];
        82 [label="[85]: br i1 %15 , label %16 , label %20"
           ,shape=box];
        84 [label="[86]: %17 = sub nsw i32 %6 , 1"
           ,shape=box];
        85 [label="[86]: store i32 %17 , i32* %up , align 4"
           ,shape=box];
        86 [label="[87]: %18 = getelementptr inbounds %struct.DATA* %12 , i32 0, i32 1"
           ,shape=box];
        87 [label="[87]: %19 = load i32* %18 , align 4"
           ,shape=box];
        88 [label="[87]: store i32 %19 , i32* %fvalue , align 4"
           ,shape=box];
        89 [label="[91]: br label %29"
           ,shape=box];
        91 [label="[93]: %21 = icmp sgt i32 %14 , %x"
           ,shape=box];
        92 [label="[93]: br i1 %21 , label %22 , label %24"
           ,shape=box];
        94 [label="[94]: %23 = sub nsw i32 %10 , 1"
           ,shape=box];
        95 [label="[94]: store i32 %23 , i32* %up , align 4"
           ,shape=box];
        96 [label="[98]: br label %26"
           ,shape=box];
        98 [label="[100]: %25 = add nsw i32 %10 , 1"
           ,shape=box];
        99 [label="[100]: store i32 %25 , i32* %low , align 4"
           ,shape=box];
        100 [label="[]: br label %26"
            ,shape=box];
        102 [label="[]: %27 = phi i32 [ [%5, %24], [%23, %22] ]"
            ,shape=box];
        103 [label="[]: %28 = phi i32 [ [%25, %24], [%6, %22] ]"
            ,shape=box];
        104 [label="[]: br label %29"
            ,shape=box];
        106 [label="[]: %30 = phi i32 [ [%3, %26], [%19, %16] ]"
            ,shape=box];
        107 [label="[]: %31 = phi i32 [ [%x, %26], [%4, %16] ]"
            ,shape=box];
        108 [label="[]: %32 = phi i32 [ [%27, %26], [%17, %16] ]"
            ,shape=box];
        109 [label="[]: %33 = phi i32 [ [%28, %26], [%6, %16] ]"
            ,shape=box];
        110 [label="[108]: br label %2"
            ,shape=box];
        112 [label="[112]: ret i32 %3"
            ,shape=box];
        4611686018427387851 [label="(global-in)@binary_search:@data"
                            ,color=yellow];
    }
    47 -> 49 [color=black];
    47 -> 50 [color=black];
    47 -> 4611686018427387856 [color=black];
    49 -> 52 [color=deepskyblue];
    49 -> 768614336404564601 [color=black];
    52 -> -4611686018427387848 [color=black];
    52 -> -4611686018427387847 [color=black];
    52 -> -4611686018427387846 [color=black];
    52 -> -4611686018427387845 [color=black];
    52 -> -4611686018427387844 [color=black];
    52 -> 53 [color=black];
    52 -> 55 [color=black];
    52 -> 56 [color=black];
    52 -> 57 [color=black];
    52 -> 58 [color=black];
    52 -> 59 [color=black];
    52 -> 60 [color=black];
    52 -> 61 [color=black];
    52 -> 62 [color=black];
    52 -> 64 [color=black];
    52 -> 65 [color=black];
    52 -> 67 [color=black];
    52 -> 68 [color=black];
    52 -> 69 [color=black];
    52 -> 70 [color=black];
    52 -> 71 [color=black];
    52 -> 72 [color=black];
    52 -> 102 [color=black];
    52 -> 103 [color=black];
    52 -> 104 [color=black];
    52 -> 106 [color=black];
    52 -> 107 [color=black];
    52 -> 108 [color=black];
    52 -> 109 [color=black];
    52 -> 110 [color=black];
    52 -> 4611686018427387851 [color=black];
    53 -> 60 [color=sandybrown];
    53 -> 68 [color=sandybrown];
    53 -> 91 [color=sandybrown];
    53 -> 107 [color=sandybrown];
    60 -> -4611686018427387848 [color=sandybrown];
    61 -> -4611686018427387844 [color=sandybrown];
    62 -> -4611686018427387845 [color=sandybrown];
    64 -> -4611686018427387847 [color=sandybrown];
    67 -> 106 [color=sandybrown];
    67 -> 112 [color=sandybrown];
    68 -> 81 [color=sandybrown];
    68 -> 107 [color=sandybrown];
    69 -> 71 [color=sandybrown];
    69 -> 74 [color=sandybrown];
    69 -> 102 [color=sandybrown];
    70 -> 71 [color=sandybrown];
    70 -> 74 [color=sandybrown];
    70 -> 84 [color=sandybrown];
    70 -> 103 [color=sandybrown];
    70 -> 109 [color=sandybrown];
    71 -> 72 [color=sandybrown];
    72 -> 74 [color=black];
    72 -> 75 [color=black];
    72 -> 76 [color=black];
    72 -> 77 [color=black];
    72 -> 78 [color=black];
    72 -> 79 [color=black];
    72 -> 80 [color=black];
    72 -> 81 [color=black];
    72 -> 82 [color=black];
    72 -> 112 [color=black];
    74 -> 75 [color=sandybrown];
    75 -> 76 [color=sandybrown];
    75 -> 77 [color=sandybrown];
    75 -> 94 [color=sandybrown];
    75 -> 98 [color=sandybrown];
    76 -> -4611686018427387846 [color=sandybrown];
    77 -> 78 [color=sandybrown];
    78 -> 79 [color=sandybrown];
    78 -> 86 [color=sandybrown];
    80 -> 81 [color=sandybrown];
    80 -> 91 [color=sandybrown];
    81 -> 82 [color=sandybrown];
    82 -> 84 [color=black];
    82 -> 85 [color=black];
    82 -> 86 [color=black];
    82 -> 87 [color=black];
    82 -> 88 [color=black];
    82 -> 89 [color=black];
    82 -> 91 [color=black];
    82 -> 92 [color=black];
    84 -> 85 [color=sandybrown];
    84 -> 108 [color=sandybrown];
    85 -> -4611686018427387845 [color=sandybrown];
    87 -> 88 [color=sandybrown];
    87 -> 106 [color=sandybrown];
    88 -> -4611686018427387847 [color=sandybrown];
    91 -> 92 [color=sandybrown];
    92 -> 94 [color=black];
    92 -> 95 [color=black];
    92 -> 96 [color=black];
    92 -> 98 [color=black];
    92 -> 99 [color=black];
    92 -> 100 [color=black];
    94 -> 95 [color=sandybrown];
    94 -> 102 [color=sandybrown];
    95 -> -4611686018427387845 [color=sandybrown];
    98 -> 99 [color=sandybrown];
    98 -> 103 [color=sandybrown];
    99 -> -4611686018427387844 [color=sandybrown];
    102 -> 108 [color=sandybrown];
    103 -> 109 [color=sandybrown];
    106 -> 67 [color=sandybrown];
    107 -> 68 [color=sandybrown];
    108 -> 69 [color=sandybrown];
    109 -> 70 [color=sandybrown];
    768614336404564601 -> 4611686018427387851 [style=dashed
                                              ,color=forestgreen];
    4611686018427387851 -> 78 [color=sandybrown];
    4611686018427387851 -> 80 [color=sandybrown];
    4611686018427387851 -> 87 [color=sandybrown];
}