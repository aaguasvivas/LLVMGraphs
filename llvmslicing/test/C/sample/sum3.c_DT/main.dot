digraph {
	node [label="\N"];
	graph [bb="0,0,1204,1222"];
	33 [label="%n = alloca i32 , align 4", pos="492,19", width="3.6389", height="0.51389"];
	34 [label="%i = alloca i32 , align 4", pos="492,93", width="3.5278", height="0.51389"];
	35 [label="%sum = alloca i32 , align 4", pos="492,167", width="4.0278", height="0.51389"];
	36 [label="%1 = call i32 @printf ( i8* i8* getelementptr ( [26 x i8]* @.str ,  i32 0, i32 0 ) )", pos="492,241", width="11.139", height="0.51389"];
	40 [label="%3 = call i32 @__isoc99_scanf ( i8* i8* getelementptr ( [3 x i8]* @.str1 ,  i32 0, i32 0 ), i32* %n )", pos="492,315", width="13.667", height="0.51389"];
	43 [label="store i32 0 , i32* %sum , align 4", pos="492,389", width="4.7222", height="0.51389"];
	44 [label="store i32 1 , i32* %i , align 4", pos="492,463", width="4.2222", height="0.51389"];
	45 [label="br label %5", pos="492,537", width="1.8611", height="0.51389"];
	47 [label="%6 = load i32* %i , align 4", pos="492,611", width=4, height="0.51389"];
	48 [label="%7 = load i32* %n , align 4", pos="492,685", width="4.1111", height="0.51389"];
	49 [label="%8 = icmp sle i32 %6 , %7", pos="492,759", width=4, height="0.51389"];
	50 [label="br i1 %8 , label %9 , label %10", pos="492,833", width="4.5", height="0.51389"];
	52 [label="call void @A ( i32* %sum, i32* %i )", pos="285,907", width="5.1111", height="0.51389"];
	53 [label="br label %5", pos="197,981", width="1.8611", height="0.51389"];
	55 [label="%11 = load i32* %sum , align 4", pos="699,907", width="4.6667", height="0.51389"];
	56 [label="%12 = call i32 @printf ( i8* i8* getelementptr ( [10 x i8]* @.str2 ,  i32 0, i32 0 ), i32 %11 )", pos="743,981", width="12.806", height="0.51389"];
	59 [label="%14 = load i32* %i , align 4", pos="743,1055", width="4.1667", height="0.51389"];
	60 [label="%15 = call i32 @printf ( i8* i8* getelementptr ( [8 x i8]* @.str3 ,  i32 0, i32 0 ), i32 %14 )", pos="743,1129", width="12.611", height="0.51389"];
	63 [label="ret i32 0", pos="743,1203", width="1.5", height="0.51389"];
	34 -> 33 [pos="e,492,37.667 492,74.327 492,66.264 492,56.648 492,47.711"];
	35 -> 34 [pos="e,492,111.67 492,148.33 492,140.26 492,130.65 492,121.71"];
	36 -> 35 [pos="e,492,185.67 492,222.33 492,214.26 492,204.65 492,195.71"];
	40 -> 36 [pos="e,492,259.67 492,296.33 492,288.26 492,278.65 492,269.71"];
	43 -> 40 [pos="e,492,333.67 492,370.33 492,362.26 492,352.65 492,343.71"];
	44 -> 43 [pos="e,492,407.67 492,444.33 492,436.26 492,426.65 492,417.71"];
	45 -> 44 [pos="e,492,481.67 492,518.33 492,510.26 492,500.65 492,491.71"];
	47 -> 45 [pos="e,492,555.67 492,592.33 492,584.26 492,574.65 492,565.71"];
	48 -> 47 [pos="e,492,629.67 492,666.33 492,658.26 492,648.65 492,639.71"];
	49 -> 48 [pos="e,492,703.67 492,740.33 492,732.26 492,722.65 492,713.71"];
	50 -> 49 [pos="e,492,777.67 492,814.33 492,806.26 492,796.65 492,787.71"];
	52 -> 50 [pos="e,442.59,850.66 334.85,889.18 364.31,878.65 401.81,865.24 432.78,854.17"];
	53 -> 52 [pos="e,262.97,925.52 218.3,963.09 229.4,953.75 243.15,942.19 255.28,931.99"];
	55 -> 50 [pos="e,541.54,850.71 649.42,889.28 619.83,878.7 582.08,865.2 550.96,854.08"];
	56 -> 55 [pos="e,710.1,925.67 731.9,962.33 726.89,953.91 720.89,943.81 715.38,934.55"];
	59 -> 56 [pos="e,743,999.67 743,1036.3 743,1028.3 743,1018.6 743,1009.7"];
	60 -> 59 [pos="e,743,1073.7 743,1110.3 743,1102.3 743,1092.6 743,1083.7"];
	63 -> 60 [pos="e,743,1147.7 743,1184.3 743,1176.3 743,1166.6 743,1157.7"];
}
