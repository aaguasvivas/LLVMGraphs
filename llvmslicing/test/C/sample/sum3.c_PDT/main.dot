digraph {
	node [label="\N"];
	graph [bb="0,0,1129,1222"];
	33 [label="%n = alloca i32 , align 4", pos="492,1203", width="3.6389", height="0.51389"];
	34 [label="%i = alloca i32 , align 4", pos="492,1129", width="3.5278", height="0.51389"];
	35 [label="%sum = alloca i32 , align 4", pos="492,1055", width="4.0278", height="0.51389"];
	36 [label="%1 = call i32 @printf ( i8* i8* getelementptr ( [26 x i8]* @.str ,  i32 0, i32 0 ) )", pos="492,981", width="11.139", height="0.51389"];
	40 [label="%3 = call i32 @__isoc99_scanf ( i8* i8* getelementptr ( [3 x i8]* @.str1 ,  i32 0, i32 0 ), i32* %n )", pos="492,907", width="13.667", height="0.51389"];
	43 [label="store i32 0 , i32* %sum , align 4", pos="492,833", width="4.7222", height="0.51389"];
	44 [label="store i32 1 , i32* %i , align 4", pos="492,759", width="4.2222", height="0.51389"];
	45 [label="br label %5", pos="542,685", width="1.8611", height="0.51389"];
	47 [label="%6 = load i32* %i , align 4", pos="668,611", width=4, height="0.51389"];
	48 [label="%7 = load i32* %n , align 4", pos="668,537", width="4.1111", height="0.51389"];
	49 [label="%8 = icmp sle i32 %6 , %7", pos="668,463", width=4, height="0.51389"];
	50 [label="br i1 %8 , label %9 , label %10", pos="668,389", width="4.5", height="0.51389"];
	52 [label="call void @A ( i32* %sum, i32* %i )", pos="846,759", width="5.1111", height="0.51389"];
	53 [label="br label %5", pos="795,685", width="1.8611", height="0.51389"];
	55 [label="%11 = load i32* %sum , align 4", pos="668,315", width="4.6667", height="0.51389"];
	56 [label="%12 = call i32 @printf ( i8* i8* getelementptr ( [10 x i8]* @.str2 ,  i32 0, i32 0 ), i32 %11 )", pos="668,241", width="12.806", height="0.51389"];
	59 [label="%14 = load i32* %i , align 4", pos="668,167", width="4.1667", height="0.51389"];
	60 [label="%15 = call i32 @printf ( i8* i8* getelementptr ( [8 x i8]* @.str3 ,  i32 0, i32 0 ), i32 %14 )", pos="668,93", width="12.611", height="0.51389"];
	63 [label="ret i32 0", pos="668,19", width="1.5", height="0.51389"];
	33 -> 34 [pos="e,492,1147.7 492,1184.3 492,1176.3 492,1166.6 492,1157.7"];
	34 -> 35 [pos="e,492,1073.7 492,1110.3 492,1102.3 492,1092.6 492,1083.7"];
	35 -> 36 [pos="e,492,999.67 492,1036.3 492,1028.3 492,1018.6 492,1009.7"];
	36 -> 40 [pos="e,492,925.67 492,962.33 492,954.26 492,944.65 492,935.71"];
	40 -> 43 [pos="e,492,851.67 492,888.33 492,880.26 492,870.65 492,861.71"];
	43 -> 44 [pos="e,492,777.67 492,814.33 492,806.26 492,796.65 492,787.71"];
	44 -> 45 [pos="e,529.56,703.41 504.62,740.33 510.46,731.67 517.52,721.23 523.92,711.76"];
	45 -> 47 [pos="e,636.87,629.28 570.59,668.21 587.56,658.24 609.34,645.45 628,634.49"];
	47 -> 48 [pos="e,668,555.67 668,592.33 668,584.26 668,574.65 668,565.71"];
	48 -> 49 [pos="e,668,481.67 668,518.33 668,510.26 668,500.65 668,491.71"];
	49 -> 50 [pos="e,668,407.67 668,444.33 668,436.26 668,426.65 668,417.71"];
	50 -> 55 [pos="e,668,333.67 668,370.33 668,362.26 668,352.65 668,343.71"];
	52 -> 53 [pos="e,807.69,703.41 833.13,740.33 827.17,731.67 819.97,721.23 813.44,711.76"];
	53 -> 47 [pos="e,699.37,629.28 766.18,668.21 749,658.2 726.92,645.33 708.06,634.34"];
	55 -> 56 [pos="e,668,259.67 668,296.33 668,288.26 668,278.65 668,269.71"];
	56 -> 59 [pos="e,668,185.67 668,222.33 668,214.26 668,204.65 668,195.71"];
	59 -> 60 [pos="e,668,111.67 668,148.33 668,140.26 668,130.65 668,121.71"];
	60 -> 63 [pos="e,668,37.667 668,74.327 668,66.264 668,56.648 668,47.711"];
}
