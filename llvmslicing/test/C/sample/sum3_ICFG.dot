digraph {
    subgraph cluster_100 {
        graph [label="@llvm.dbg.declare"];
        100 [label="ExternalFunction: @llvm.dbg.declare"];
    }
    subgraph cluster_101 {
        graph [label="@printf"];
        101 [label="ExternalFunction: @printf"];
    }
    subgraph cluster_102 {
        graph [label="@__isoc99_scanf"];
        102 [label="ExternalFunction: @__isoc99_scanf"];
    }
    subgraph cluster_30 {
        graph [label="@main"];
        subgraph cluster_31 {
            graph [label="%0"];
            -42 [label=ReturnNode
                ,shape=box];
            -39 [label=ReturnNode
                ,shape=box];
            33 [label="%1 = alloca i32 , align 4"
               ,shape=box];
            34 [label="%n = alloca i32 , align 4"
               ,shape=box];
            35 [label="%i = alloca i32 , align 4"
               ,shape=box];
            36 [label="%sum = alloca i32 , align 4"
               ,shape=box];
            38 [label="store i32 0 , i32* %1"
               ,shape=box];
            39 [label="%2 = call i32 @printf ( i8* i8* getelementptr ( [26 x i8]* @.str ,  i32 0, i32 0 ) )"
               ,shape=box];
            42 [label="%4 = call i32 @__isoc99_scanf ( i8* i8* getelementptr ( [3 x i8]* @.str1 ,  i32 0, i32 0 ), i32* %n )"
               ,shape=box];
            45 [label="store i32 0 , i32* %sum , align 4"
               ,shape=box];
            46 [label="store i32 1 , i32* %i , align 4"
               ,shape=box];
            47 [label="br label %6"
               ,shape=box];
        }
        subgraph cluster_48 {
            graph [label="%6"];
            49 [label="%7 = phi i32 [ [%.pre, %10], [1, %0] ]"
               ,shape=box];
            50 [label="%8 = load i32* %n , align 4"
               ,shape=box];
            51 [label="%9 = icmp sle i32 %7 , %8"
               ,shape=box];
            52 [label="br i1 %9 , label %10 , label %11"
               ,shape=box];
        }
        subgraph cluster_53 {
            graph [label="%10"];
            -54 [label=ReturnNode
                ,shape=box];
            54 [label="call void @A ( i32* %sum, i32* %i )"
               ,shape=box];
            55 [label="%.pre = load i32* %i , align 4"
               ,shape=box];
            56 [label="br label %6"
               ,shape=box];
        }
        subgraph cluster_57 {
            graph [label="%11"];
            -63 [label=ReturnNode
                ,shape=box];
            -59 [label=ReturnNode
                ,shape=box];
            58 [label="%12 = load i32* %sum , align 4"
               ,shape=box];
            59 [label="%13 = call i32 @printf ( i8* i8* getelementptr ( [10 x i8]* @.str2 ,  i32 0, i32 0 ), i32 %12 )"
               ,shape=box];
            62 [label="%15 = load i32* %i , align 4"
               ,shape=box];
            63 [label="%16 = call i32 @printf ( i8* i8* getelementptr ( [8 x i8]* @.str3 ,  i32 0, i32 0 ), i32 %15 )"
               ,shape=box];
            66 [label="ret i32 0"
               ,shape=box];
        }
    }
    subgraph cluster_67 {
        graph [label="@A"];
        subgraph cluster_70 {
            graph [label="%0"];
            -76 [label=ReturnNode
                ,shape=box];
            -75 [label=ReturnNode
                ,shape=box];
            71 [label="%1 = alloca i32* , align 8"
               ,shape=box];
            72 [label="%2 = alloca i32* , align 8"
               ,shape=box];
            73 [label="store i32* %x , i32** %1 , align 8"
               ,shape=box];
            74 [label="store i32* %y , i32** %2 , align 8"
               ,shape=box];
            75 [label="call void @add ( i32* %x, i32* %y )"
               ,shape=box];
            76 [label="call void @inc ( i32* %y )"
               ,shape=box];
            77 [label="ret void",shape=box];
        }
    }
    subgraph cluster_78 {
        graph [label="@add"];
        subgraph cluster_81 {
            graph [label="%0"];
            82 [label="%1 = alloca i32* , align 8"
               ,shape=box];
            83 [label="%2 = alloca i32* , align 8"
               ,shape=box];
            84 [label="store i32* %a , i32** %1 , align 8"
               ,shape=box];
            85 [label="store i32* %b , i32** %2 , align 8"
               ,shape=box];
            86 [label="%3 = load i32* %a , align 4"
               ,shape=box];
            87 [label="%4 = load i32* %b , align 4"
               ,shape=box];
            88 [label="%5 = add nsw i32 %3 , %4"
               ,shape=box];
            89 [label="store i32 %5 , i32* %a , align 4"
               ,shape=box];
            90 [label="ret void",shape=box];
        }
    }
    subgraph cluster_91 {
        graph [label="@inc"];
        subgraph cluster_93 {
            graph [label="%0"];
            -98 [label=ReturnNode
                ,shape=box];
            94 [label="%1 = alloca i32* , align 8"
               ,shape=box];
            95 [label="%tmp = alloca i32 , align 4"
               ,shape=box];
            96 [label="store i32* %z , i32** %1 , align 8"
               ,shape=box];
            97 [label="store i32 1 , i32* %tmp , align 4"
               ,shape=box];
            98 [label="call void @add ( i32* %z, i32* %tmp )"
               ,shape=box];
            99 [label="ret void",shape=box];
        }
    }
    -98 -> 99 [label=""];
    -76 -> 77 [label=""];
    -75 -> 76 [label=""];
    -63 -> 66 [label=""];
    -59 -> 62 [label=""];
    -54 -> 55 [label=""];
    -42 -> 45 [label=""];
    -39 -> 42 [label=""];
    33 -> 34 [label=""];
    34 -> 35 [label=""];
    35 -> 36 [label=""];
    36 -> 38 [label=""];
    38 -> 39 [label=""];
    39 -> -39 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    39 -> 101 [label="(_[%2 = call i32 @printf ( i8* i8* getelementptr ( [26 x i8]* @.str ,  i32 0, i32 0 ) )]"
              ,style=dashed
              ,color=deepskyblue];
    42 -> -42 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    42 -> 102 [label="(_[%4 = call i32 @__isoc99_scanf ( i8* i8* getelementptr ( [3 x i8]* @.str1 ,  i32 0, i32 0 ), i32* %n )]"
              ,style=dashed
              ,color=deepskyblue];
    45 -> 46 [label=""];
    46 -> 47 [label=""];
    47 -> 49 [label=""];
    49 -> 50 [label=""];
    50 -> 51 [label=""];
    51 -> 52 [label=""];
    52 -> 54 [label=True];
    52 -> 58 [label=False];
    54 -> -54 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    54 -> 71 [label="(_[call void @A ( i32* %sum, i32* %i )]"
             ,style=dashed
             ,color=deepskyblue];
    55 -> 56 [label=""];
    56 -> 49 [label=""];
    58 -> 59 [label=""];
    59 -> -59 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    59 -> 101 [label="(_[%13 = call i32 @printf ( i8* i8* getelementptr ( [10 x i8]* @.str2 ,  i32 0, i32 0 ), i32 %12 )]"
              ,style=dashed
              ,color=deepskyblue];
    62 -> 63 [label=""];
    63 -> -63 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    63 -> 101 [label="(_[%16 = call i32 @printf ( i8* i8* getelementptr ( [8 x i8]* @.str3 ,  i32 0, i32 0 ), i32 %15 )]"
              ,style=dashed
              ,color=deepskyblue];
    71 -> 72 [label=""];
    72 -> 73 [label=""];
    73 -> 74 [label=""];
    74 -> 75 [label=""];
    75 -> -75 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    75 -> 82 [label="(_[call void @add ( i32* %x, i32* %y )]"
             ,style=dashed
             ,color=deepskyblue];
    76 -> -76 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    76 -> 94 [label="(_[call void @inc ( i32* %y )]"
             ,style=dashed
             ,color=deepskyblue];
    77 -> -54 [label=")_[call void @A ( i32* %sum, i32* %i )]"
              ,style=dashed
              ,color=crimson];
    82 -> 83 [label=""];
    83 -> 84 [label=""];
    84 -> 85 [label=""];
    85 -> 86 [label=""];
    86 -> 87 [label=""];
    87 -> 88 [label=""];
    88 -> 89 [label=""];
    89 -> 90 [label=""];
    90 -> -98 [label=")_[call void @add ( i32* %z, i32* %tmp )]"
              ,style=dashed
              ,color=crimson];
    90 -> -75 [label=")_[call void @add ( i32* %x, i32* %y )]"
              ,style=dashed
              ,color=crimson];
    94 -> 95 [label=""];
    95 -> 96 [label=""];
    96 -> 97 [label=""];
    97 -> 98 [label=""];
    98 -> -98 [label="<call-to-return>"
              ,style=dotted
              ,color=forestgreen];
    98 -> 82 [label="(_[call void @add ( i32* %z, i32* %tmp )]"
             ,style=dashed
             ,color=deepskyblue];
    99 -> -76 [label=")_[call void @inc ( i32* %y )]"
              ,style=dashed
              ,color=crimson];
    101 -> -63 [label=")_[%16 = call i32 @printf ( i8* i8* getelementptr ( [8 x i8]* @.str3 ,  i32 0, i32 0 ), i32 %15 )]"
               ,style=dashed
               ,color=crimson];
    101 -> -59 [label=")_[%13 = call i32 @printf ( i8* i8* getelementptr ( [10 x i8]* @.str2 ,  i32 0, i32 0 ), i32 %12 )]"
               ,style=dashed
               ,color=crimson];
    101 -> -39 [label=")_[%2 = call i32 @printf ( i8* i8* getelementptr ( [26 x i8]* @.str ,  i32 0, i32 0 ) )]"
               ,style=dashed
               ,color=crimson];
    102 -> -42 [label=")_[%4 = call i32 @__isoc99_scanf ( i8* i8* getelementptr ( [3 x i8]* @.str1 ,  i32 0, i32 0 ), i32* %n )]"
               ,style=dashed
               ,color=crimson];
}